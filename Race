--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v91=v5(v82,v19);v19=nil;return v91;else return v82;end end end);local function v20(v31,v32,v33)if v33 then local v83=0 -0 ;local v84;while true do if (v83==(0 -0)) then v84=(v31/(2^(v32-(1 -0))))%(2^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + 1)) ;return v84-(v84%(932 -(857 + 74))) ;end end else local v85=((1447 -(282 + 595)) -((2004 -(1523 + 114)) + 201))^(v32-(928 -(214 + 641 + 72))) ;return (((v31%(v85 + v85))>=v85) and (1 + 0)) or (0 + 0) ;end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35,v36=v1(v16,v18,v18 + (2 -0) );v18=v18 + 2 ;return (v36 * (1321 -(68 + 997))) + v35 ;end local function v23()local v37=1270 -(226 + 1044) ;local v38;local v39;local v40;local v41;while true do if (v37==(4 -3)) then return (v41 * 16777216) + (v40 * ((121355 -55702) -(32 + 85))) + (v39 * (251 + 5)) + v38 ;end if (v37==((0 -0) + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + (960 -(892 + 65)) );v18=v18 + (354 -(87 + 263)) ;v37=2 -1 ;end end end local function v24()local v42=442 -(416 + 26) ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(183 -(67 + 113))) then if (v47==(0 + 0)) then if (v46==((0 -0) -0)) then return v48 * (0 + 0) ;else v47=3 -2 ;v45=0;end elseif (v47==2047) then return ((v46==(952 -(802 + 150))) and (v48 * ((2 -1)/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(745 + 120 + 158) ) * (v45 + (v46/((999 -((1618 -703) + 82))^((585 -(145 + 293)) -95)))) ;end if (v42==(0 + 0)) then v43=v23();v44=v23();v42=1 -0 ;end if (v42==(432 -(44 + 386))) then v47=v20(v44,21,31);v48=((v20(v44,1219 -(1069 + 118) )==(2 -1)) and  -((1487 -(998 + 488)) -0)) or (1 + 0 + 0) ;v42=3;end if (v42==(1 -0)) then v45=1 + 0 ;v46=(v20(v44,792 -(368 + 423) ,20) * ((6 -4)^((41 + 9) -(10 + 8)))) + v43 ;v42=7 -5 ;end end end local function v25(v49)local v50;if  not v49 then v49=v23();if (v49==(772 -(201 + 571))) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1139 -(116 + 1022)) );v18=v18 + v49 ;local v51={};for v66=4 -3 , #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=1210 -(1035 + 175) ;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v52~=(561 -(306 + 254))) then else local v89=0 + 0 ;while true do if (v89~=1) then else v52=2;break;end if (v89==0) then v55=nil;v56=nil;v89=1 -0 ;end end end if (v52==2) then local v90=0;while true do if (v90==1) then v52=3;break;end if ((1467 -(899 + 568))~=v90) then else local v98=0 + 0 ;while true do if (v98~=(0 -0)) then else v57=nil;v58=nil;v98=604 -(268 + 335) ;end if (v98~=(291 -(60 + 230))) then else v90=1;break;end end end end end if (v52~=0) then else v53=0;v54=nil;v52=1;end if (v52==(575 -(426 + 146))) then v59=nil;while true do local v92=0 + 0 ;local v93;while true do if (v92~=(1456 -(282 + 1174))) then else v93=0;while true do if (v93==(811 -(569 + 242))) then if ((5 -3)==v53) then local v99=0 + 0 ;local v100;while true do if (v99~=(1024 -(706 + 318))) then else v100=1251 -(721 + 530) ;while true do if (1~=v100) then else for v226=1272 -(945 + 326) ,v23() do local v227=0;local v228;local v229;local v230;while true do if (v227==(0 -0)) then v228=0;v229=nil;v227=1 + 0 ;end if (v227~=(701 -(271 + 429))) then else v230=nil;while true do if (v228~=1) then else while true do if (v229==(0 + 0)) then v230=v21();if (v20(v230,1,1501 -(1408 + 92) )~=0) then else local v248=0;local v249;local v250;local v251;local v252;while true do if (0~=v248) then else local v253=1086 -(461 + 625) ;while true do if (v253~=(1288 -(993 + 295))) then else v249=0 + 0 ;v250=nil;v253=1172 -(418 + 753) ;end if (v253==(1 + 0)) then v248=1;break;end end end if (v248==(1 + 0)) then local v254=0 + 0 ;while true do if (v254~=(1 + 0)) then else v248=531 -(406 + 123) ;break;end if (v254==(1769 -(1749 + 20))) then v251=nil;v252=nil;v254=1;end end end if (v248~=(1 + 1)) then else while true do if (v249~=(1325 -(1249 + 73))) then else if (v20(v251,3,3)==(1 + 0)) then v252[4]=v59[v252[4]];end v54[v226]=v252;break;end if (v249==(1146 -(466 + 679))) then v252={v22(),v22(),nil,nil};if (v250==0) then local v261=1900 -(106 + 1794) ;local v262;local v263;local v264;while true do if (v261~=1) then else v264=nil;while true do if (v262~=0) then else v263=0 + 0 ;v264=nil;v262=1;end if (v262==(1 + 0)) then while true do if (v263==(0 -0)) then v264=0 -0 ;while true do if (v264==0) then v252[117 -(4 + 110) ]=v22();v252[588 -(57 + 527) ]=v22();break;end end break;end end break;end end break;end if (v261~=(1427 -(41 + 1386))) then else v262=0;v263=nil;v261=104 -(17 + 86) ;end end elseif (v250==(1 + 0)) then v252[6 -3 ]=v23();elseif (v250==2) then v252[8 -5 ]=v23() -(2^(182 -(122 + 44))) ;elseif (v250==(5 -2)) then local v268=0 -0 ;local v269;while true do if (0~=v268) then else v269=0 + 0 ;while true do if (v269==(0 + 0)) then v252[5 -2 ]=v23() -(2^(81 -(30 + 35))) ;v252[3 + 1 ]=v22();break;end end break;end end end v249=2;end if (0==v249) then v250=v20(v230,2,3);v251=v20(v230,1261 -(1043 + 214) ,22 -16 );v249=1213 -(323 + 889) ;end if ((5 -3)~=v249) then else local v257=580 -(361 + 219) ;local v258;while true do if (v257~=0) then else v258=0;while true do if (0~=v258) then else local v267=320 -(53 + 267) ;while true do if (v267==(1 + 0)) then v258=1;break;end if (v267==0) then if (v20(v251,1,1)==1) then v252[415 -(15 + 398) ]=v59[v252[984 -(18 + 964) ]];end if (v20(v251,7 -5 ,2)~=1) then else v252[2 + 1 ]=v59[v252[2 + 1 ]];end v267=1;end end end if (v258==1) then v249=3;break;end end break;end end end end break;end end end break;end end break;end if (0~=v228) then else local v242=850 -(20 + 830) ;while true do if (v242==1) then v228=1 + 0 ;break;end if (v242~=(126 -(116 + 10))) then else v229=0 + 0 ;v230=nil;v242=1;end end end end break;end end end v53=741 -(542 + 196) ;break;end if (v100==(0 -0)) then local v220=0 + 0 ;while true do if (v220==1) then v100=1 + 0 ;break;end if (v220~=0) then else for v236=1,v58 do local v237=0;local v238;local v239;local v240;while true do if (v237~=(0 + 0)) then else v238=0 -0 ;v239=nil;v237=1;end if (v237~=1) then else v240=nil;while true do if (v238~=0) then else local v243=0 -0 ;local v244;while true do if (v243==(1551 -(1126 + 425))) then v244=405 -(118 + 287) ;while true do if (0==v244) then local v255=0;while true do if (v255==(0 -0)) then v239=v21();v240=nil;v255=1;end if (v255~=(1122 -(118 + 1003))) then else v244=2 -1 ;break;end end end if (v244~=1) then else v238=378 -(142 + 235) ;break;end end break;end end end if (v238==(4 -3)) then if (v239==1) then v240=v21()~=(0 + 0) ;elseif (v239==(979 -(553 + 424))) then v240=v24();elseif (v239~=3) then else v240=v25();end v59[v236]=v240;break;end end break;end end end v57[5 -2 ]=v21();v220=1;end end end end break;end end end if (v53==(3 + 0)) then local v101=0 + 0 ;local v102;local v103;while true do if (0~=v101) then else v102=0;v103=nil;v101=1 + 0 ;end if (v101~=(1 + 0)) then else while true do if ((0 + 0)~=v102) then else v103=0;while true do if (v103==(0 -0)) then local v232=0 -0 ;while true do if ((0 -0)~=v232) then else local v241=0;while true do if (v241==(0 + 0)) then for v246=4 -3 ,v23() do v55[v246-(754 -(239 + 514)) ]=v28();end return v57;end end end end end end break;end end break;end end end v93=1 + 0 ;end if (v93~=1) then else if (v53~=0) then else local v104=1329 -(797 + 532) ;local v105;local v106;while true do if (v104==(0 + 0)) then v105=0 + 0 ;v106=nil;v104=2 -1 ;end if (v104~=1) then else while true do if (v105~=(1202 -(373 + 829))) then else v106=0;while true do if (v106==1) then v56={};v53=732 -(476 + 255) ;break;end if (v106==(1130 -(369 + 761))) then v54={};v55={};v106=1;end end break;end end break;end end end if (v53==(1 + 0)) then local v107=0 -0 ;local v108;local v109;while true do if (v107==(0 -0)) then v108=238 -(64 + 174) ;v109=nil;v107=1 + 0 ;end if (v107~=(1 -0)) then else while true do if (v108==0) then v109=336 -(144 + 192) ;while true do if ((216 -(42 + 174))==v109) then local v233=0 + 0 ;while true do if (v233~=0) then else v57={v54,v55,nil,v56};v58=v23();v233=1505 -(363 + 1141) ;end if (v233~=1) then else v109=1;break;end end end if (v109~=1) then else v59={};v53=1582 -(1183 + 397) ;break;end end break;end end break;end end end break;end end break;end end end break;end end end local function v29(v60,v61,v62)local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...)local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v86=0,v76 do if (v86>=v70) then v74[v86-v70 ]=v75[v86 + 1 ];else v78[v86]=v75[v86 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=24) then if (v81<=11) then if (v81<=5) then if (v81<=2) then if (v81<=0) then local v110=0;local v111;while true do if (v110==0) then v111=v80[2];v78[v111]=v78[v111](v13(v78,v111 + 1 ,v80[3]));break;end end elseif (v81>1) then local v144=v80[2];v78[v144](v13(v78,v144 + 1 ,v80[3]));else local v145=v80[2];local v146=v78[v80[3]];v78[v145 + 1 ]=v146;v78[v145]=v146[v80[4]];end elseif (v81<=3) then v78[v80[2]][v80[3]]=v78[v80[4]];elseif (v81==4) then do return;end else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=8) then if (v81<=6) then v72=v80[3];elseif (v81==7) then local v152=0;local v153;while true do if (v152==0) then v153=v80[2];v78[v153]=v78[v153](v13(v78,v153 + 1 ,v73));break;end end else v78[v80[2]]=v62[v80[3]];end elseif (v81<=9) then v78[v80[2]]=v78[v80[3]];elseif (v81==10) then v78[v80[2]]();elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=17) then if (v81<=14) then if (v81<=12) then for v139=v80[2],v80[3] do v78[v139]=nil;end elseif (v81>13) then local v156=0;local v157;local v158;local v159;local v160;while true do if (1==v156) then v73=(v159 + v157) -1 ;v160=0;v156=2;end if (v156==2) then for v221=v157,v73 do local v222=0;while true do if (v222==0) then v160=v160 + 1 ;v78[v221]=v158[v160];break;end end end break;end if (v156==0) then v157=v80[2];v158,v159=v71(v78[v157](v13(v78,v157 + 1 ,v80[3])));v156=1;end end else v78[v80[2]]=v29(v69[v80[3]],nil,v62);end elseif (v81<=15) then local v117=v80[2];local v118=v78[v80[3]];v78[v117 + 1 ]=v118;v78[v117]=v118[v80[4]];elseif (v81==16) then v78[v80[2]]=v80[3];elseif (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=20) then if (v81<=18) then v78[v80[2]]=v78[v80[3]][v80[4]];elseif (v81==19) then local v164=v80[2];v78[v164](v13(v78,v164 + 1 ,v73));else for v200=v80[2],v80[3] do v78[v200]=nil;end end elseif (v81<=22) then if (v81>21) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v165=v80[2];v78[v165]=v78[v165](v13(v78,v165 + 1 ,v80[3]));end elseif (v81==23) then local v167=v80[2];v78[v167](v13(v78,v167 + 1 ,v80[3]));else local v168=0;local v169;while true do if (v168==0) then v169=v80[2];v78[v169]=v78[v169]();break;end end end elseif (v81<=36) then if (v81<=30) then if (v81<=27) then if (v81<=25) then v78[v80[2]]=v78[v80[3]][v80[4]];elseif (v81==26) then local v170=v80[2];local v171,v172=v71(v78[v170](v13(v78,v170 + 1 ,v80[3])));v73=(v172 + v170) -1 ;local v173=0;for v202=v170,v73 do v173=v173 + 1 ;v78[v202]=v171[v173];end else local v174=0;local v175;while true do if (v174==0) then v175=v80[2];v78[v175](v78[v175 + 1 ]);break;end end end elseif (v81<=28) then local v126=v80[2];local v127,v128=v71(v78[v126](v78[v126 + 1 ]));v73=(v128 + v126) -1 ;local v129=0;for v141=v126,v73 do v129=v129 + 1 ;v78[v141]=v127[v129];end elseif (v81>29) then local v176=0;local v177;while true do if (v176==0) then v177=v80[2];v78[v177](v78[v177 + 1 ]);break;end end else v78[v80[2]]={};end elseif (v81<=33) then if (v81<=31) then local v130=0;local v131;while true do if (v130==0) then v131=v80[2];v78[v131](v13(v78,v131 + 1 ,v73));break;end end elseif (v81==32) then local v179=0;local v180;local v181;local v182;local v183;while true do if (v179==0) then v180=v80[2];v181,v182=v71(v78[v180](v78[v180 + 1 ]));v179=1;end if (v179==2) then for v223=v180,v73 do v183=v183 + 1 ;v78[v223]=v181[v183];end break;end if (v179==1) then v73=(v182 + v180) -1 ;v183=0;v179=2;end end else v78[v80[2]]=v29(v69[v80[3]],nil,v62);end elseif (v81<=34) then v62[v80[3]]=v78[v80[2]];elseif (v81>35) then v78[v80[2]][v80[3]]=v80[4];else v78[v80[2]]=v80[3];end elseif (v81<=42) then if (v81<=39) then if (v81<=37) then v62[v80[3]]=v78[v80[2]];elseif (v81==38) then if (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v189=v80[2];v78[v189]=v78[v189]();end elseif (v81<=40) then v72=v80[3];elseif (v81==41) then v78[v80[2]]=v78[v80[3]];else v78[v80[2]][v80[3]]=v80[4];end elseif (v81<=45) then if (v81<=43) then v78[v80[2]]=v62[v80[3]];elseif (v81==44) then v78[v80[2]]();else v78[v80[2]]={};end elseif (v81<=47) then if (v81>46) then local v196=v80[2];v78[v196]=v78[v196](v13(v78,v196 + 1 ,v73));else do return;end end elseif (v81==48) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
